// Code generated by protoc-gen-go.
// source: tesco_products.proto
// DO NOT EDIT!

/*
Package tescogrpc is a generated protocol buffer package.

It is generated from these files:
	tesco_products.proto

It has these top-level messages:
	GetProductsRequest
	ProductsResponse
	Product
	ProductContents
	ProductCharacterisitics
*/
package tescogrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetProductsRequest struct {
	Barcode string `protobuf:"bytes,1,opt,name=barcode" json:"barcode,omitempty"`
}

func (m *GetProductsRequest) Reset()                    { *m = GetProductsRequest{} }
func (m *GetProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProductsRequest) ProtoMessage()               {}
func (*GetProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetProductsRequest) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

type ProductsResponse struct {
	Products []*Product `protobuf:"bytes,1,rep,name=Products" json:"Products,omitempty"`
}

func (m *ProductsResponse) Reset()                    { *m = ProductsResponse{} }
func (m *ProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ProductsResponse) ProtoMessage()               {}
func (*ProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProductsResponse) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type Product struct {
	Gtin             string                   `protobuf:"bytes,1,opt,name=gtin" json:"gtin,omitempty"`
	Description      string                   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Contents         *ProductContents         `protobuf:"bytes,3,opt,name=contents" json:"contents,omitempty"`
	Characterisitics *ProductCharacterisitics `protobuf:"bytes,4,opt,name=characterisitics" json:"characterisitics,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Product) GetGtin() string {
	if m != nil {
		return m.Gtin
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetContents() *ProductContents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Product) GetCharacterisitics() *ProductCharacterisitics {
	if m != nil {
		return m.Characterisitics
	}
	return nil
}

type ProductContents struct {
	Quantity    float32 `protobuf:"fixed32,1,opt,name=quantity" json:"quantity,omitempty"`
	QuantityUom string  `protobuf:"bytes,2,opt,name=quantityUom" json:"quantityUom,omitempty"`
	AvgMeasure  string  `protobuf:"bytes,3,opt,name=avgMeasure" json:"avgMeasure,omitempty"`
	NetContents string  `protobuf:"bytes,4,opt,name=netContents" json:"netContents,omitempty"`
}

func (m *ProductContents) Reset()                    { *m = ProductContents{} }
func (m *ProductContents) String() string            { return proto.CompactTextString(m) }
func (*ProductContents) ProtoMessage()               {}
func (*ProductContents) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProductContents) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *ProductContents) GetQuantityUom() string {
	if m != nil {
		return m.QuantityUom
	}
	return ""
}

func (m *ProductContents) GetAvgMeasure() string {
	if m != nil {
		return m.AvgMeasure
	}
	return ""
}

func (m *ProductContents) GetNetContents() string {
	if m != nil {
		return m.NetContents
	}
	return ""
}

type ProductCharacterisitics struct {
	IsFood  bool `protobuf:"varint,1,opt,name=isFood" json:"isFood,omitempty"`
	IsDrink bool `protobuf:"varint,2,opt,name=isDrink" json:"isDrink,omitempty"`
}

func (m *ProductCharacterisitics) Reset()                    { *m = ProductCharacterisitics{} }
func (m *ProductCharacterisitics) String() string            { return proto.CompactTextString(m) }
func (*ProductCharacterisitics) ProtoMessage()               {}
func (*ProductCharacterisitics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ProductCharacterisitics) GetIsFood() bool {
	if m != nil {
		return m.IsFood
	}
	return false
}

func (m *ProductCharacterisitics) GetIsDrink() bool {
	if m != nil {
		return m.IsDrink
	}
	return false
}

func init() {
	proto.RegisterType((*GetProductsRequest)(nil), "tescogrpc.GetProductsRequest")
	proto.RegisterType((*ProductsResponse)(nil), "tescogrpc.ProductsResponse")
	proto.RegisterType((*Product)(nil), "tescogrpc.Product")
	proto.RegisterType((*ProductContents)(nil), "tescogrpc.ProductContents")
	proto.RegisterType((*ProductCharacterisitics)(nil), "tescogrpc.ProductCharacterisitics")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TescoService service

type TescoServiceClient interface {
	GetProducts(ctx context.Context, in *GetProductsRequest, opts ...grpc.CallOption) (*ProductsResponse, error)
}

type tescoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTescoServiceClient(cc *grpc.ClientConn) TescoServiceClient {
	return &tescoServiceClient{cc}
}

func (c *tescoServiceClient) GetProducts(ctx context.Context, in *GetProductsRequest, opts ...grpc.CallOption) (*ProductsResponse, error) {
	out := new(ProductsResponse)
	err := grpc.Invoke(ctx, "/tescogrpc.TescoService/GetProducts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TescoService service

type TescoServiceServer interface {
	GetProducts(context.Context, *GetProductsRequest) (*ProductsResponse, error)
}

func RegisterTescoServiceServer(s *grpc.Server, srv TescoServiceServer) {
	s.RegisterService(&_TescoService_serviceDesc, srv)
}

func _TescoService_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TescoServiceServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tescogrpc.TescoService/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TescoServiceServer).GetProducts(ctx, req.(*GetProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TescoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tescogrpc.TescoService",
	HandlerType: (*TescoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProducts",
			Handler:    _TescoService_GetProducts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tesco_products.proto",
}

func init() { proto.RegisterFile("tesco_products.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x35, 0x6d, 0x69, 0x93, 0x89, 0x60, 0x19, 0x44, 0x43, 0x45, 0x09, 0x39, 0xf5, 0x94, 0x43,
	0x05, 0x3f, 0x40, 0x45, 0x0f, 0x45, 0x91, 0x55, 0x4f, 0x1e, 0x24, 0xdd, 0x0c, 0x75, 0x11, 0x77,
	0xd3, 0xdd, 0x4d, 0xc1, 0xcf, 0xf0, 0xab, 0xfc, 0x2d, 0xc9, 0x92, 0xc4, 0xd0, 0xe8, 0x6d, 0xdf,
	0x9b, 0x37, 0x79, 0xf3, 0x26, 0x03, 0x87, 0x96, 0x0c, 0x57, 0xaf, 0x85, 0x56, 0x79, 0xc9, 0xad,
	0x49, 0x0b, 0xad, 0xac, 0xc2, 0xc0, 0xb1, 0x6b, 0x5d, 0xf0, 0x24, 0x05, 0xbc, 0x25, 0xfb, 0x50,
	0xd7, 0x19, 0x6d, 0x4a, 0x32, 0x16, 0x23, 0x98, 0xac, 0x32, 0xcd, 0x55, 0x4e, 0x91, 0x17, 0x7b,
	0xf3, 0x80, 0x35, 0x30, 0xb9, 0x84, 0xe9, 0xaf, 0xd8, 0x14, 0x4a, 0x1a, 0xc2, 0x14, 0xfc, 0x86,
	0x8b, 0xbc, 0x78, 0x38, 0x0f, 0x17, 0x98, 0xb6, 0x0e, 0x69, 0x5d, 0x62, 0xad, 0x26, 0xf9, 0xf6,
	0x60, 0x52, 0x03, 0x44, 0x18, 0xad, 0xad, 0x90, 0xb5, 0x8d, 0x7b, 0x63, 0x0c, 0x61, 0x4e, 0x86,
	0x6b, 0x51, 0x58, 0xa1, 0x64, 0x34, 0x70, 0xa5, 0x2e, 0x85, 0x17, 0xe0, 0x73, 0x25, 0x2d, 0x49,
	0x6b, 0xa2, 0x61, 0xec, 0xcd, 0xc3, 0xc5, 0xac, 0xef, 0x78, 0x55, 0x2b, 0x58, 0xab, 0xc5, 0x7b,
	0x98, 0xf2, 0xb7, 0x4c, 0x67, 0xdc, 0x92, 0x16, 0x46, 0x58, 0xc1, 0x4d, 0x34, 0x72, 0xfd, 0xc9,
	0x1f, 0xfd, 0x3b, 0x4a, 0xd6, 0xeb, 0x4d, 0xbe, 0x3c, 0x38, 0xd8, 0x71, 0xc3, 0x19, 0xf8, 0x9b,
	0x32, 0x93, 0x56, 0xd8, 0x4f, 0x97, 0x6a, 0xc0, 0x5a, 0x5c, 0x25, 0x6b, 0xde, 0xcf, 0xea, 0xa3,
	0x49, 0xd6, 0xa1, 0xf0, 0x0c, 0x20, 0xdb, 0xae, 0xef, 0x28, 0x33, 0xa5, 0x26, 0x97, 0x2d, 0x60,
	0x1d, 0xa6, 0xfa, 0x82, 0xa4, 0xd6, 0xcc, 0x0d, 0x1f, 0xb0, 0x2e, 0x95, 0x2c, 0xe1, 0xf8, 0x9f,
	0x00, 0x78, 0x04, 0x63, 0x61, 0x6e, 0x94, 0xca, 0xdd, 0x60, 0x3e, 0xab, 0x51, 0xf5, 0xbb, 0x85,
	0xb9, 0xd6, 0x42, 0xbe, 0xbb, 0x91, 0x7c, 0xd6, 0xc0, 0xc5, 0x0b, 0xec, 0x3f, 0x55, 0x7b, 0x79,
	0x24, 0xbd, 0x15, 0x9c, 0x70, 0x09, 0x61, 0xe7, 0x5c, 0xf0, 0xb4, 0xb3, 0xb5, 0xfe, 0x19, 0xcd,
	0x4e, 0xfa, 0x4b, 0x6d, 0xaf, 0x26, 0xd9, 0x5b, 0x8d, 0xdd, 0x35, 0x9e, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0x4d, 0xaa, 0xf7, 0xa5, 0x02, 0x00, 0x00,
}
